{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ronak\\\\program\\\\zerodha clone\\\\dashboard\\\\src\\\\components\\\\BuyActionWindow.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BuyActionWindow from \"./BuyActionWindow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeneralContext = /*#__PURE__*/createContext({\n  openBuyWindow: () => {},\n  closeBuyWindow: () => {},\n  refreshOrders: () => {} // ✅ New function for updating orders\n});\nexport const GeneralContextProvider = ({\n  children\n}) => {\n  _s();\n  const [isBuyWindowOpen, setIsBuyWindowOpen] = useState(false);\n  const [selectedStockUID, setSelectedStockUID] = useState(\"\");\n  const [orders, setOrders] = useState([]);\n  const openBuyWindow = uid => {\n    setIsBuyWindowOpen(true);\n    setSelectedStockUID(uid);\n  };\n  const closeBuyWindow = () => {\n    setIsBuyWindowOpen(false);\n    setSelectedStockUID(\"\");\n  };\n  const fetchOrders = async () => {\n    try {\n      const res = await axios.get(\"https://zerodha-clone-backend-z8u8.onrender.com/newOrder\");\n      setOrders(res.data);\n    } catch (error) {\n      console.error(\"Error fetching orders:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GeneralContext.Provider, {\n    value: {\n      openBuyWindow,\n      closeBuyWindow,\n      refreshOrders: fetchOrders\n    },\n    children: [children, isBuyWindowOpen && /*#__PURE__*/_jsxDEV(BuyActionWindow, {\n      uid: selectedStockUID,\n      refreshOrders: fetchOrders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(GeneralContextProvider, \"e/qVUg8aHZUA8OJLqIWYD3uRwts=\");\n_c = GeneralContextProvider;\nexport default GeneralContext;\nvar _c;\n$RefreshReg$(_c, \"GeneralContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","BuyActionWindow","jsxDEV","_jsxDEV","GeneralContext","openBuyWindow","closeBuyWindow","refreshOrders","GeneralContextProvider","children","_s","isBuyWindowOpen","setIsBuyWindowOpen","selectedStockUID","setSelectedStockUID","orders","setOrders","uid","fetchOrders","res","get","data","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ronak/program/zerodha clone/dashboard/src/components/BuyActionWindow.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport BuyActionWindow from \"./BuyActionWindow\";\r\n\r\nconst GeneralContext = createContext({\r\n  openBuyWindow: () => {},\r\n  closeBuyWindow: () => {},\r\n  refreshOrders: () => {}, // ✅ New function for updating orders\r\n});\r\n\r\nexport const GeneralContextProvider = ({ children }) => {\r\n  const [isBuyWindowOpen, setIsBuyWindowOpen] = useState(false);\r\n  const [selectedStockUID, setSelectedStockUID] = useState(\"\");\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  const openBuyWindow = (uid) => {\r\n    setIsBuyWindowOpen(true);\r\n    setSelectedStockUID(uid);\r\n  };\r\n\r\n  const closeBuyWindow = () => {\r\n    setIsBuyWindowOpen(false);\r\n    setSelectedStockUID(\"\");\r\n  };\r\n\r\n  const fetchOrders = async () => {\r\n    try {\r\n      const res = await axios.get(\"https://zerodha-clone-backend-z8u8.onrender.com/newOrder\");\r\n      setOrders(res.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching orders:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchOrders();\r\n  }, []);\r\n\r\n  return (\r\n    <GeneralContext.Provider value={{ openBuyWindow, closeBuyWindow, refreshOrders: fetchOrders }}>\r\n      {children}\r\n      {isBuyWindowOpen && <BuyActionWindow uid={selectedStockUID} refreshOrders={fetchOrders} />}\r\n    </GeneralContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GeneralContext;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,cAAc,gBAAGP,aAAa,CAAC;EACnCQ,aAAa,EAAEA,CAAA,KAAM,CAAC,CAAC;EACvBC,cAAc,EAAEA,CAAA,KAAM,CAAC,CAAC;EACxBC,aAAa,EAAEA,CAAA,KAAM,CAAC,CAAC,CAAE;AAC3B,CAAC,CAAC;AAEF,OAAO,MAAMC,sBAAsB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMO,aAAa,GAAIY,GAAG,IAAK;IAC7BL,kBAAkB,CAAC,IAAI,CAAC;IACxBE,mBAAmB,CAACG,GAAG,CAAC;EAC1B,CAAC;EAED,MAAMX,cAAc,GAAGA,CAAA,KAAM;IAC3BM,kBAAkB,CAAC,KAAK,CAAC;IACzBE,mBAAmB,CAAC,EAAE,CAAC;EACzB,CAAC;EAED,MAAMI,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,0DAA0D,CAAC;MACvFJ,SAAS,CAACG,GAAG,CAACE,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACdmB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA,CAACC,cAAc,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,aAAa;MAAEC,cAAc;MAAEC,aAAa,EAAEW;IAAY,CAAE;IAAAT,QAAA,GAC3FA,QAAQ,EACRE,eAAe,iBAAIR,OAAA,CAACF,eAAe;MAACgB,GAAG,EAAEJ,gBAAiB;MAACN,aAAa,EAAEW;IAAY;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnE,CAAC;AAE9B,CAAC;AAACnB,EAAA,CAlCWF,sBAAsB;AAAAsB,EAAA,GAAtBtB,sBAAsB;AAoCnC,eAAeJ,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}